# 이슈별 Planning Template 및 가이드 (issue_planning.rule)

---
## [공통] Workflow 규칙 안내
- 본 파일을 포함한 모든 workflow/rule 파일은 반드시 doc/rules/workflow_common.md(공통 규칙)을 준수해야 함


이 파일은 새로운 이슈(기능/개선/버그 등) 진행 시 일관된 설계·구현·테스트 계획을 수립하기 위한 템플릿과 체크리스트입니다.

---

## 0. 실제 이슈 내용 확인 (github CLI 활용)
- planning.md 작성 전, 반드시 `gh issue view <번호> --json title,body` 등 github CLI 명령어로 실제 이슈의 제목/본문/첨부를 확인한다.
- 실제 이슈 내용(요구사항, 예시, 첨부 이미지 등)을 기반으로 planning을 작성한다.
- (예시 명령)
  - `gh issue view 51 --json title,body`
  - `gh issue view <번호> --json title,body,comments`

---

## 1. 구현 범위 및 방향

1. **핵심 기능/요구사항**
   - (예시) 사용자가 앱 설정에서 특정 기능을 직접 선택/설정할 수 있도록 지원한다.
   - (예시) 기본값, 예외 처리, 지원/비지원 범위 등 명확히 기술

2. **적용 범위**
   - (예시) 앱 전체/일부, 특정 플랫폼/화면/상황 등 적용 범위 명시

3. **설정/미리보기/UX**
   - (예시) 설정 화면/UX, 미리보기, UI 형태(리스트/드롭다운/샘플 등) 구체화

4. **적용/변경 방식**
   - (예시) 즉시 적용/재시작 필요 여부, 상태 관리 패턴(Provider, Bloc 등) 명시

5. **테스트 환경**
   - (예시) 우선 검증 플랫폼(Android/iOS/웹), TODO/향후 계획 등

6. **기타**
   - (예시) 라이선스, 접근성, 용량, fallback 정책 등 추가 요구사항

---

## 2. 결론(요약)
- 핵심 목표/정책/적용 범위/테스트/문서화 등 한 줄 요약

---

## 3. Tasks (체크리스트)
- [ ] 핵심 기능/요구사항 구현
- [ ] UI/UX 및 미리보기 구현
- [ ] 적용/변경 방식(상태 관리 등) 구현
- [ ] 테스트 및 TODO/향후 계획 추가
- [ ] 라이선스/접근성/기타 요구사항 반영
- [ ] 문서화 및 결과 정리

---

## 4. Inline Q&A (선택)
- 각 항목별로 담당자/팀원/리뷰어가 직접 답변을 달아 요구사항을 명확히 할 수 있음
- 예시: "이 기능의 적용 범위는? -> 앱 전체 적용입니다."

---

이 템플릿을 복사하여 새로운 이슈의 planning.md 파일에 활용하세요.
